{"version":3,"sources":["GifContext.js","components/SearchBar.js","components/Gif.js","components/GifList.js","App.js","index.js"],"names":["GifContext","createContext","GifProvider","props","useState","gifs","setGifs","Provider","value","children","SearchBar","useContext","search","setSearch","query","setQuery","useEffect","getGifs","a","fetch","response","json","data","handleSearch","className","type","placeholder","onChange","event","target","onKeyUp","keyCode","onClick","Gif","gif","user","avatar_url","display_name","src","images","fixed_width","url","alt","style","height","parseInt","GifList","length","map","key","id","App","ReactDOM","render","document","getElementById"],"mappings":"kPAEaA,EAAaC,0BAEbC,EAAc,SAAAC,GAAU,IAAD,EACVC,mBAAS,IADC,mBAC3BC,EAD2B,KACrBC,EADqB,KAElC,OACE,kBAACN,EAAWO,SAAZ,CAAqBC,MAAO,CAAEH,OAAMC,YACjCH,EAAMM,WC2CEC,EAhDG,WAChB,IAEQJ,EAAYK,qBAAWX,GAAvBM,QAHc,EAIMF,mBAAS,IAJf,mBAIfQ,EAJe,KAIPC,EAJO,OAKIT,mBAAS,aALb,mBAKfU,EALe,KAKRC,EALQ,KAOtBC,oBAAU,WACRC,KAEC,CAACH,IAEJ,IAAMG,EAAO,sCAAG,8BAAAC,EAAA,qEACSC,MAAM,iCAAD,OACOL,EADP,mBAZd,kBAWA,cACRM,EADQ,gBAIKA,EAASC,OAJd,OAIRC,EAJQ,OAKdhB,EAAQgB,EAAKA,MALC,yCAAH,qDAYPC,EAAe,WACnBR,EAAS,YAAD,OAAaH,EAAb,MACRN,EAAQ,KAOV,OACE,yBAAKkB,UAAU,cACb,2BACEC,KAAK,OACLC,YAAY,SACZC,SAlBe,SAAAC,GACnBf,EAAUe,EAAMC,OAAOrB,QAkBnBsB,QAViB,SAAAF,GACH,KAAlBA,EAAMG,SAAkBR,OAWtB,4BAAQE,KAAK,SAASO,QAAST,GAC7B,uBAAGC,UAAU,qBCrBNS,EAtBH,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAKb,OAJAA,EAAIC,KAAOD,EAAIC,MAAQ,CACrBC,WAAY,mBACZC,aAAc,aAGd,wBAAIb,UAAU,OACZ,yBACEc,IAAKJ,EAAIK,OAAOC,YAAYC,IAC5BC,IAAI,MACJC,MAAO,CACLC,OAAQC,SAASX,EAAIK,OAAOC,YAAYI,WAG5C,yBAAKpB,UAAU,cACb,yBAAKA,UAAU,SAASc,IAAKJ,EAAIC,KAAKC,WAAYM,IAAI,KACtD,4BAAKR,EAAIC,KAAKE,iBCAPS,EAdC,WAAO,IACbzC,EAASM,qBAAWX,GAApBK,KAER,OAAOA,EAAK0C,OACV,wBAAIvB,UAAU,YACXnB,EAAK2C,IAAI,SAAAd,GAAG,OACX,kBAAC,EAAD,CAAKA,IAAKA,EAAKe,IAAKf,EAAIgB,QAI5B,uBAAG1B,UAAU,4BCGF2B,G,MAXH,WACV,OACE,kBAAC,EAAD,KACE,yBAAK3B,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,UCNR4B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.aba88d13.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react';\r\n\r\nexport const GifContext = createContext();\r\n\r\nexport const GifProvider = props => {\r\n  const [gifs, setGifs] = useState([]);\r\n  return (\r\n    <GifContext.Provider value={{ gifs, setGifs }}>\r\n      {props.children}\r\n    </GifContext.Provider>\r\n  );\r\n};\r\n","import React, { useEffect, useState, useContext } from 'react';\r\nimport { GifContext } from '../GifContext';\r\n\r\nconst SearchBar = () => {\r\n  const API_KEY = 'dc6zaTOxFJmzC';\r\n\r\n  const { setGifs } = useContext(GifContext);\r\n  const [search, setSearch] = useState('');\r\n  const [query, setQuery] = useState('trending?');\r\n\r\n  useEffect(() => {\r\n    getGifs();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [query]);\r\n\r\n  const getGifs = async () => {\r\n    const response = await fetch(\r\n      `https://api.giphy.com/v1/gifs/${query}api_key=${API_KEY}`\r\n    );\r\n    const data = await response.json();\r\n    setGifs(data.data);\r\n  };\r\n\r\n  const updateSearch = event => {\r\n    setSearch(event.target.value);\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    setQuery(`search?q=${search}&`);\r\n    setGifs([]);\r\n  };\r\n\r\n  const handleKeyPress = event => {\r\n    event.keyCode === 13 && handleSearch();\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-bar\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"search\"\r\n        onChange={updateSearch}\r\n        onKeyUp={handleKeyPress}\r\n      />\r\n      <button type=\"submit\" onClick={handleSearch}>\r\n        <i className=\"fas fa-search\" />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\n\r\nconst Gif = ({ gif }) => {\r\n  gif.user = gif.user || {\r\n    avatar_url: '../anonymous.jpg',\r\n    display_name: 'anonymous'\r\n  };\r\n  return (\r\n    <li className=\"gif\">\r\n      <img\r\n        src={gif.images.fixed_width.url}\r\n        alt=\"gif\"\r\n        style={{\r\n          height: parseInt(gif.images.fixed_width.height)\r\n        }}\r\n      />\r\n      <div className=\"gif-bottom\">\r\n        <img className=\"avatar\" src={gif.user.avatar_url} alt=\"\" />\r\n        <h5>{gif.user.display_name}</h5>\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Gif;\r\n","import React, { useContext } from 'react';\r\nimport Gif from './Gif';\r\nimport { GifContext } from '../GifContext';\r\n\r\nconst GifList = () => {\r\n  const { gifs } = useContext(GifContext);\r\n\r\n  return gifs.length ? (\r\n    <ul className=\"gif-list\">\r\n      {gifs.map(gif => (\r\n        <Gif gif={gif} key={gif.id} />\r\n      ))}\r\n    </ul>\r\n  ) : (\r\n    <i className=\"loading fas fa-spinner\" />\r\n  );\r\n};\r\n\r\nexport default GifList;\r\n","import React from 'react';\nimport SearchBar from './components/SearchBar';\nimport GifList from './components/GifList';\nimport { GifProvider } from './GifContext';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <GifProvider>\n      <div className=\"container\">\n        <SearchBar />\n        <GifList />\n      </div>\n    </GifProvider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}